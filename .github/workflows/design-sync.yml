name: Design Code Sync

on:
  workflow_dispatch:
  push:
    branches:
      - chore/ci-automation
    paths:
      - "design/**"
      - "scripts/figma/**"
      - "scripts/ai/**"
      - "scripts/locofy/**"
      - "scripts/teleporthq/**"
      - "scripts/crewai/**"
      - ".github/workflows/design-sync.yml"

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: design-sync-${{ github.ref }}
  cancel-in-progress: false

jobs:
  design_sync:
    runs-on: ubuntu-latest
    env:
      # Optional design sources
      FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
      FIGMA_FILE_KEY: ${{ vars.FIGMA_FILE_KEY || secrets.FIGMA_FILE_KEY }}
      ENABLE_TELEPORTHQ: ${{ vars.ENABLE_TELEPORTHQ || 'false' }}
      LOCOFY_EMAIL: ${{ secrets.LOCOFY_EMAIL }}
      LOCOFY_PASSWORD: ${{ secrets.LOCOFY_PASSWORD }}
      TELEPORTHQ_TOKEN: ${{ secrets.TELEPORTHQ_TOKEN }}

      # AI providers
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      OPENAI_MODEL: ${{ vars.OPENAI_MODEL }}
      ANTHROPIC_MODEL: ${{ vars.ANTHROPIC_MODEL }}

      # CrewAI (optional)
      ENABLE_CREWAI: ${{ vars.ENABLE_CREWAI || 'false' }}
      CREWAI_CONFIG: ${{ vars.CREWAI_CONFIG || 'scripts/crewai/design.yml' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps (pnpm or npm)
        run: |
          if [ -f package.json ]; then
            corepack enable || true
            if command -v pnpm >/dev/null 2>&1 && [ -f pnpm-lock.yaml ]; then
              pnpm install --frozen-lockfile
            else
              npm ci
            fi
          fi

      - name: Generate design tokens (Figma or AI)
        run: |
          if [ -n "${FIGMA_TOKEN}" ] && [ -n "${FIGMA_FILE_KEY}" ]; then
            echo "Using Figma…"
            node scripts/figma/pull-variables.js
            node scripts/figma/update-theme.js
          else
            echo "Using AI fallback…"
            node scripts/ai/generate-tokens.js
          fi

      - name: Locofy export (optional)
        run: |
          if [ -n "${LOCOFY_EMAIL}" ] && [ -n "${LOCOFY_PASSWORD}" ]; then
            bash scripts/locofy/export.sh
          else
            echo "Skipping Locofy: credentials not set."
          fi

      - name: TeleportHQ export (optional)
        run: |
          if [ "${ENABLE_TELEPORTHQ}" = "true" ] && [ -n "${TELEPORTHQ_TOKEN}" ]; then
            bash scripts/teleporthq/export.sh
          else
            echo "Skipping TeleportHQ: disabled or token missing."
          fi

      - name: Uizard image → code (OpenAI/Claude)
        run: |
          # Update args if your generator expects a directory instead of a single file
          node scripts/ai/image-to-code.mjs "design/Business Detail.png"

      - name: Auto-clientize generated components (optional)
        run: |
          if [ -f scripts/ai/postprocess-clientize.mjs ]; then
            node scripts/ai/postprocess-clientize.mjs
          else
            echo "Skipping clientization: scripts/ai/postprocess-clientize.mjs not found."
          fi

      # ---------- CrewAI (optional orchestrator) ----------
      - name: Setup Python (for CrewAI)
        if: env.ENABLE_CREWAI == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install CrewAI + tools (optional)
        if: env.ENABLE_CREWAI == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install "crewai>=0.40" "crewai-tools>=0.5" "openai>=1" "anthropic>=0.26" "PyGithub>=2.2"

      - name: Run CrewAI pipeline (optional)
        if: env.ENABLE_CREWAI == 'true'
        env:
          GH_TOKEN: ${{ secrets.PR_BOT_TOKEN || secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          set -e
          if [ -f scripts/crewai/run_pipeline.py ]; then
            echo "Running scripts/crewai/run_pipeline.py…"
            python scripts/crewai/run_pipeline.py --branch design-refresh --base main --mode design-sync
          elif [ -f "${CREWAI_CONFIG}" ]; then
            echo "Found ${CREWAI_CONFIG}. Add CrewAI CLI invocation here if using the CLI."
            python - <<'PY'
print("No scripts/crewai/run_pipeline.py found. Place your CrewAI CLI invocation here.")
PY
          else
            echo "Skipping CrewAI: no scripts/crewai/run_pipeline.py or config present."
          fi

      # ---------- Commit & PR ----------
      - name: Commit changes to design-refresh
        run: |
          git config user.name "automation-bot"
          git config user.email "bot@users.noreply.github.com"
          git fetch origin
          git checkout -B design-refresh
          git add -A
          git commit -m "chore(design): sync tokens, generated UI, clientization, CrewAI outputs" || echo "No changes to commit"
          git push -f origin design-refresh

      - name: Open or update PR (idempotent, prefers PR_BOT_TOKEN)
        env:
          PR_BOT_TOKEN: ${{ secrets.PR_BOT_TOKEN }}
          GH_DEFAULT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail

          if [ -n "${PR_BOT_TOKEN:-}" ]; then
            export GH_TOKEN="${PR_BOT_TOKEN}"
            echo "Using PR_BOT_TOKEN for PR operations."
          else
            export GH_TOKEN="${GH_DEFAULT_TOKEN}"
            echo "PR_BOT_TOKEN not set; using default GITHUB_TOKEN (may lack permissions)."
          fi

          PR_NUMBER="$(gh pr view design-refresh --base main --json number -q .number || true)"
          if [ -z "${PR_NUMBER}" ]; then
            echo "No existing PR — creating…"
            gh pr create \
              --base main \
              --head design-refresh \
              --title "chore(design-sync): import generated UI & tokens (CrewAI=${ENABLE_CREWAI})" \
              --body "Automated Uizard PNG → code, optional CrewAI orchestration, clientization, and token sync." \
              --label "design-sync,auto-generated" \
              --draft=false
            PR_NUMBER="$(gh pr view design-refresh --base main --json number -q .number)"
          else
            echo "PR #${PR_NUMBER} already exists — updating labels/body…"
            gh pr edit "${PR_NUMBER}" --add-label "design-sync"
          fi

          gh pr merge "${PR_NUMBER}" --auto --squash || true

  trigger_ai_build:
    needs: design_sync
    runs-on: ubuntu-latest
    steps:
      - name: Trigger AI Build Workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: ai-build

