name: Design Code Sync

on:
  workflow_dispatch:
  push:
    branches:
      - chore/ci-automation
    paths:
      - "design/**"
      - "scripts/figma/**"
      - "scripts/ai/**"
      - "scripts/locofy/**"
      - "scripts/teleporthq/**"
      - ".github/workflows/design-sync.yml"

permissions:
  contents: write
  pull-requests: write

jobs:
  design_sync:
    runs-on: ubuntu-latest
    env:
      FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
      FIGMA_FILE_KEY: ${{ vars.FIGMA_FILE_KEY || secrets.FIGMA_FILE_KEY }}
      ENABLE_TELEPORTHQ: ${{ vars.ENABLE_TELEPORTHQ || 'false' }}
      LOCOFY_EMAIL: ${{ secrets.LOCOFY_EMAIL }}
      LOCOFY_PASSWORD: ${{ secrets.LOCOFY_PASSWORD }}
      TELEPORTHQ_TOKEN: ${{ secrets.TELEPORTHQ_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps (pnpm or npm)
        run: |
          if [ -f package.json ]; then
            corepack enable || true
            if command -v pnpm >/dev/null 2>&1 && [ -f pnpm-lock.yaml ]; then
              pnpm install --frozen-lockfile
            else
              npm ci
            fi
          fi

      - name: Generate design tokens (Figma or AI)
        run: |
          if [ -n "${FIGMA_TOKEN}" ] && [ -n "${FIGMA_FILE_KEY}" ]; then
            echo "Using Figma…"
            node scripts/figma/pull-variables.js
            node scripts/figma/update-theme.js
          else
            echo "Using AI fallback…"
            node scripts/ai/generate-tokens.js
          fi

      - name: Locofy export (optional)
        run: |
          if [ -n "${LOCOFY_EMAIL}" ] && [ -n "${LOCOFY_PASSWORD}" ]; then
            bash scripts/locofy/export.sh
          else
            echo "Skipping Locofy: credentials not set."
          fi

      - name: TeleportHQ export (optional)
        run: |
          if [ "${ENABLE_TELEPORTHQ}" = "true" ] && [ -n "${TELEPORTHQ_TOKEN}" ]; then
            bash scripts/teleporthq/export.sh
          else
            echo "Skipping TeleportHQ: disabled or token missing."
          fi

      - name: Uizard image → code (OpenAI/Claude)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_MODEL: ${{ vars.OPENAI_MODEL }}
          ANTHROPIC_MODEL: ${{ vars.ANTHROPIC_MODEL }}
        run: |
          node scripts/ai/image-to-code.mjs


      - name: Commit changes to design-refresh
        run: |
          git config user.name "automation-bot"
          git config user.email "bot@users.noreply.github.com"
          git checkout -B design-refresh
          git add -A
          git commit -m "chore(design): sync tokens & scaffolds" || echo "No changes to commit"
          git push -f origin design-refresh

      - name: Open PR (idempotent)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          # If a PR already exists, do nothing
          PR_URL=$(gh pr list --head design-refresh --base main --json url --jq '.[0].url' || true)
          if [ -z "$PR_URL" ]; then
            gh pr create --base main --head design-refresh \
              --title "chore(design-sync): import generated Uizard components" \
              --body "Automated Uizard PNG → code run."
          else
            echo "PR already exists: $PR_URL"
          fi

          # Optional: enable auto-merge; ignore if not allowed
          gh pr merge --auto --squash || true

