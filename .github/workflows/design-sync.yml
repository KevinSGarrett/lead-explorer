name: Design Code Sync

on:
  workflow_dispatch:
  push:
    branches:
      - chore/ci-automation
    paths:
      - "design/**"
      - "scripts/figma/**"
      - "scripts/ai/**"
      - "scripts/locofy/**"
      - "scripts/teleporthq/**"
      - ".github/workflows/design-sync.yml"

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: design-sync-${{ github.ref }}
  cancel-in-progress: false

jobs:
  design_sync:
    runs-on: ubuntu-latest
    env:
      FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
      FIGMA_FILE_KEY: ${{ vars.FIGMA_FILE_KEY || secrets.FIGMA_FILE_KEY }}
      ENABLE_TELEPORTHQ: ${{ vars.ENABLE_TELEPORTHQ || 'false' }}
      LOCOFY_EMAIL: ${{ secrets.LOCOFY_EMAIL }}
      LOCOFY_PASSWORD: ${{ secrets.LOCOFY_PASSWORD }}
      TELEPORTHQ_TOKEN: ${{ secrets.TELEPORTHQ_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps (pnpm or npm)
        run: |
          if [ -f package.json ]; then
            corepack enable || true
            if command -v pnpm >/dev/null 2>&1 && [ -f pnpm-lock.yaml ]; then
              pnpm install --frozen-lockfile
            else
              npm ci
            fi
          fi

      - name: Generate design tokens (Figma or AI)
        run: |
          if [ -n "${FIGMA_TOKEN}" ] && [ -n "${FIGMA_FILE_KEY}" ]; then
            echo "Using Figma…"
            node scripts/figma/pull-variables.js || echo "No figma pull script, skipping"
            node scripts/figma/update-theme.js   || echo "No figma theme script, skipping"
          else
            echo "Using AI fallback…"
            node scripts/ai/generate-tokens.js   || echo "No AI token script, skipping"
          fi

      - name: Locofy export (optional)
        run: |
          if [ -n "${LOCOFY_EMAIL}" ] && [ -n "${LOCOFY_PASSWORD}" ]; then
            bash scripts/locofy/export.sh || echo "Locofy export script missing/failed"
          else
            echo "Skipping Locofy: credentials not set."
          fi

      - name: TeleportHQ export (optional)
        run: |
          if [ "${ENABLE_TELEPORTHQ}" = "true" ] && [ -n "${TELEPORTHQ_TOKEN}" ]; then
            bash scripts/teleporthq/export.sh || echo "TeleportHQ export script missing/failed"
          else
            echo "Skipping TeleportHQ: disabled or token missing."
          fi

      - name: Uizard image → code (OpenAI/Claude)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_MODEL: ${{ vars.OPENAI_MODEL }}
          ANTHROPIC_MODEL: ${{ vars.ANTHROPIC_MODEL }}
        run: |
          node scripts/ai/image-to-code.mjs

      - name: Map generated components to /uizard/* preview routes
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p src/app/uizard
          shopt -s nullglob
          for f in generated/uizard/*.tsx; do
            base="$(basename "$f" .tsx)"
            dir="src/app/uizard/${base}"
            mkdir -p "$dir"
            cat > "$dir/page.tsx" <<'EOF'
/* auto-wired from generated/uizard/BASE.tsx */
import Comp from "generated/uizard/BASE";
export default function Page(){ return <Comp/> }
EOF
            sed -i "s/BASE/${base}/g" "$dir/page.tsx"
            echo "Wrote route: $dir/page.tsx"
          done

      # Optional safety net: keep generated code lint/type-check friendly without failing the job
      - name: Lint & type-check generated (non-blocking)
        run: |
          npx eslint --ext .ts,.tsx generated/uizard --fix || true
          npx tsc --noEmit -p tsconfig.json || true

      - name: Commit changes to design-refresh
        run: |
          git config user.name "automation-bot"
          git config user.email "bot@users.noreply.github.com"
          git checkout -B design-refresh
          git add -A
          git commit -m "chore(design): sync tokens, scaffolds, previews" || echo "No changes to commit"
          git push -f origin design-refresh

      - name: Open PR (idempotent) and enable auto-merge
        env:
          # Prefer a PAT if provided (Option A). Falls back to default token (Option B).
          GH_TOKEN: ${{ secrets.GH_BOT_TOKEN || secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          set -euo pipefail

          echo "Verifying branch on remote…"
          if ! git ls-remote --heads origin design-refresh | grep -q refs/heads/design-refresh; then
            echo "Branch design-refresh does not exist on origin; nothing to PR."
            exit 0
          fi

          echo "Checking for existing PR…"
          PR_URL=$(gh pr list --repo "$GITHUB_REPOSITORY" --head design-refresh --base main --json url --jq '.[0].url' || true)

          if [ -z "$PR_URL" ]; then
            echo "No PR found. Creating…"
            gh pr create \
              --repo "$GITHUB_REPOSITORY" \
              --base main \
              --head design-refresh \
              --title "chore(design-sync): import generated Uizard components" \
              --body "Automated Uizard PNG → code run (plus preview routes under /uizard/*)."
          else
            echo "PR already exists: $PR_URL"
          fi

          echo "Attempt auto-merge (if allowed)…"
          gh pr merge --repo "$GITHUB_REPOSITORY" --auto --squash || true

