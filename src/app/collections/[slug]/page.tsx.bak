import client from '@/lib/directus';
import { readItems } from '@directus/sdk';
import DataGrid from '@/components/ui/DataGrid';
import Link from 'next/link';

type ParamsP = Promise<{ slug: string }>;
const GOLD = '#d4af37';

export default async function CollectionDetail({ params }: { params: ParamsP }) {
  const { slug } = await params;

  let rows: any[] = [];
  try {
    rows = await client.request(readItems(slug, { limit: 50 }));
  } catch (e: any) {
    return (
      <main className="min-h-screen bg-black text-white p-8">
        <h1 className="text-3xl font-bold mb-6" style={{ color: GOLD }}>{slug}</h1>
        <div className="rounded-xl border p-4" style={{ borderColor: GOLD }}>
          <div className="text-red-400 font-semibold mb-2">Could not read items.</div>
          <pre className="text-xs opacity-70 whitespace-pre-wrap">{String(e)}</pre>
        </div>
        <div className="mt-4">
          <Link href="/collections" className="underline" style={{ color: GOLD }}>← Back</Link>
        </div>
      </main>
    );
  }

  const sample = rows[0] ?? {};
  const fieldCols = Object.keys(sample).slice(0, 12).map((key) => ({
    header: key,
    accessorKey: key,
    cell: ({ getValue }: any) => {
      const v = getValue();
      return typeof v === 'object' ? JSON.stringify(v) : String(v ?? '');
    },
  }));

  const columns: any[] = [
    {
      header: 'View',
      cell: ({ row }: any) => (
        <Link
          href={`/collections/${encodeURIComponent(slug)}/${encodeURIComponent(row.original.id ?? '')}`}
          className="underline"
          style={{ color: GOLD }}
        >
          Open
        </Link>
      ),
    },
    ...fieldCols,
  ];

  return (
    <main className="min-h-screen bg-black text-white p-8">
      <div className="flex items-center justify-between mb-6">
        <h1 className="text-3xl font-bold" style={{ color: GOLD }}>{slug}</h1>
        <Link href="/collections" className="px-4 py-2 rounded-full border hover:bg-[#d4af37]/10" style={{ borderColor: GOLD, color: GOLD }}>
          ← Back
        </Link>
      </div>

      <DataGrid columns={columns} data={rows} title={`${slug} (first 50)`} />
    </main>
  );
}
